{"version":3,"file":"server.js","mappings":"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","sources":["webpack://myapp/./src/controllers/loadMarket.js","webpack://myapp/./src/controllers/loadjem.js","webpack://myapp/./src/controllers/loadtrade.js","webpack://myapp/./src/controllers/update.js","webpack://myapp/./src/model/captchaCode.js","webpack://myapp/./src/model/chatLog.js","webpack://myapp/./src/model/hasitem.js","webpack://myapp/./src/model/item.js","webpack://myapp/./src/model/market.js","webpack://myapp/./src/model/report.js","webpack://myapp/./src/model/text.js","webpack://myapp/./src/model/trading_data.js","webpack://myapp/./src/model/user.js","webpack://myapp/./src/model/visited.js","webpack://myapp/external commonjs \"axios\"","webpack://myapp/external commonjs \"body-parser\"","webpack://myapp/external commonjs \"cookie-parser\"","webpack://myapp/external commonjs \"cors\"","webpack://myapp/external commonjs \"debug\"","webpack://myapp/external commonjs \"dotenv\"","webpack://myapp/external commonjs \"express\"","webpack://myapp/external commonjs \"jsonwebtoken\"","webpack://myapp/external commonjs \"mongoose\"","webpack://myapp/external commonjs \"morgan\"","webpack://myapp/external commonjs \"nunjucks\"","webpack://myapp/external commonjs \"passport\"","webpack://myapp/external commonjs \"passport-jwt\"","webpack://myapp/external commonjs \"socket.io\"","webpack://myapp/external commonjs \"winston\"","webpack://myapp/external node-commonjs \"http\"","webpack://myapp/external node-commonjs \"path\"","webpack://myapp/webpack/bootstrap","webpack://myapp/./app.js"],"sourcesContent":["// loadMarket.js\r\nconst axios = require(\"axios\");\r\nconst authorizationToken = process.env.API_KEY;\r\nconst searchdata = [\r\n  {\r\n    Category: \"재련\",\r\n    CategoryCode: 50000,\r\n    PageNum: 7,\r\n  },\r\n  {\r\n    Category: \"모험\",\r\n    CategoryCode: 100000,\r\n    PageNum: 13,\r\n  },\r\n  {\r\n    Category: \"배템\",\r\n    CategoryCode: 60000,\r\n    PageNum: 6,\r\n  },\r\n  {\r\n    Category: \"각인\",\r\n    CategoryCode: 40000,\r\n    PageNum: 29,\r\n  },\r\n  {\r\n    Category: \"음식\",\r\n    CategoryCode: 70000,\r\n    PageNum: 9,\r\n  },\r\n  {\r\n    Category: \"생활\",\r\n    CategoryCode: 90000,\r\n    PageNum: 4,\r\n  },\r\n];\r\nlet newarray = [];\r\nconst getMakeList = async () => {\r\n  for (const e of searchdata) {\r\n    const getPageData = async (pageNo) => {\r\n      const config = {\r\n        method: \"post\",\r\n        url: \"https://developer-lostark.game.onstove.com/markets/items\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          authorization: `bearer ${authorizationToken}`,\r\n          \"content-Type\": \"application/json\",\r\n        },\r\n        data: {\r\n          CategoryCode: e.CategoryCode,\r\n          PageNo: pageNo,\r\n        },\r\n      };\r\n      const response = await axios(config);\r\n\r\n      if (e.CategoryCode === 50000) {\r\n        try {\r\n          const itemsToExclude = [\r\n            \"수호석\",\r\n            \"수호석 조각\",\r\n            \"파괴석 조각\",\r\n            \"생명의 돌파석\",\r\n            \"별의 숨결\",\r\n            \"조화의 파편 주머니(중)\",\r\n            \"조화의 파편 주머니(소)\",\r\n            \"조화의 돌파석\",\r\n            \"달의 숨결\",\r\n            \"아크투르스의 서 : 무기\",\r\n            \"재봉술 : 매듭 기본\",\r\n            \"재봉술 : 도안 기본\",\r\n            \"야금술 : 접쇠 기본\",\r\n            \"아크투르스의 의지 : 방어구\",\r\n            \"크라테르의 지혜 : 무기\",\r\n            \"아크투르스의 서 : 방어구\",\r\n            \"크라테르의 지혜 : 방어구\",\r\n            \"야금술 : 접쇠 심화\",\r\n            \"야금술 : 주조 기본\",\r\n            \"조화의 파편 주머니(대)\",\r\n            \"재봉술 : 매듭 심화\",\r\n            \"크라테르의 권능 : 방어구\",\r\n            \"크라테르의 권능 : 무기\",\r\n            \"아크투르스의 의지 : 무기\",\r\n            \"크라테르의 서 : 무기\",\r\n            \"크라테르의 서 : 방어구\",\r\n            \"야금술 : 단조 복합\",\r\n          ];\r\n          const filteredItems = response.data.Items.filter(\r\n            (item) => !itemsToExclude.includes(item.Name)\r\n          );\r\n          return filteredItems;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return [];\r\n        }\r\n      } else if (e.CategoryCode === 40000) {\r\n        try {\r\n          const filteredItems = response.data.Items.filter((item) =>\r\n            item.Grade.includes(\"전설\")\r\n          );\r\n          return filteredItems;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return [];\r\n        }\r\n      } else if (e.CategoryCode === 70000) {\r\n        try {\r\n          const filteredItems = response.data.Items.filter(\r\n            (item) => item.BundleCount == 10\r\n          );\r\n          return filteredItems;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return [];\r\n        }\r\n      } else {\r\n        try {\r\n          return response.data.Items;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return [];\r\n        }\r\n      }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      const promises = [];\r\n      for (let pageNo = 1; pageNo <= e.PageNum; pageNo++) {\r\n        promises.push(getPageData(pageNo));\r\n      }\r\n      try {\r\n        const resultArrays = await Promise.all(promises);\r\n        const list = resultArrays.flat(); // Flatten the array of arrays\r\n        let newlist = list;\r\n        newlist.map((i) => (i.Category = e.Category));\r\n        if (e.CategoryCode === 50000) {\r\n          const condition = [\r\n            \"명예의 파편 주머니(소)\",\r\n            \"명예의 파편 주머니(중)\",\r\n            \"명예의 파편 주머니(대)\",\r\n          ];\r\n          const resultList = list.filter((e) => condition.includes(e.Name));\r\n          let result = 0;\r\n          resultList.map((e) => {\r\n            result += e.YDayAvgPrice;\r\n          });\r\n          const avg = result / 3000;\r\n          const avghonor = {\r\n            Id: 22,\r\n            Category: \"재련\",\r\n            Name: \"명예의 파편(낱개)\",\r\n            Grade: \"일반\",\r\n            Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_7_147.png\",\r\n            BundleCount: 1,\r\n            TradeRemainCount: null,\r\n            YDayAvgPrice: avg,\r\n            RecentPrice: 1,\r\n            CurrentMinPrice: 1,\r\n          };\r\n          newlist.push(avghonor);\r\n        }\r\n        newarray = [...newarray, ...newlist];\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    await fetchData();\r\n  }\r\n  return newarray;\r\n};\r\nmodule.exports = getMakeList;\r\n","// loadMarket.js\r\nconst axios = require(\"axios\");\r\nconst authorizationToken = process.env.API_KEY;\r\nconst getPageData = async (pageNo) => {\r\n  const config = {\r\n    method: \"post\",\r\n    url: \"https://developer-lostark.game.onstove.com/auctions/items\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      authorization: `bearer ${authorizationToken}`,\r\n      \"content-Type\": \"application/json\",\r\n    },\r\n    data: {\r\n      ItemLevelMin: 0,\r\n      ItemLevelMax: 0,\r\n      ItemGradeQuality: null,\r\n      SkillOptions: [\r\n        {\r\n          FirstOption: null,\r\n          SecondOption: null,\r\n          MinValue: null,\r\n          MaxValue: null,\r\n        },\r\n      ],\r\n      EtcOptions: [\r\n        {\r\n          FirstOption: null,\r\n          SecondOption: null,\r\n          MinValue: null,\r\n          MaxValue: null,\r\n        },\r\n      ],\r\n      Sort: \"BidStart_Price\",\r\n      CategoryCode: 210000,\r\n      CharacterClass: \"\",\r\n      ItemTier: 3,\r\n      ItemGrade: \"\",\r\n      ItemName: \"5레벨\",\r\n      PageNo: pageNo,\r\n      SortCondition: \"ASC\",\r\n    },\r\n  };\r\n  try {\r\n    const response = await axios(config);\r\n    return response.data.Items;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\nconst loadjem = async () => {\r\n  const promises = [];\r\n  for (let pageNo = 0; pageNo <= 10; pageNo++) {\r\n    promises.push(getPageData(pageNo));\r\n  }\r\n  try {\r\n    const resultArrays = await Promise.all(promises);\r\n    const list = resultArrays.flat(); // Flatten the array of arrays\r\n    const newlist = list.map((i) => i.AuctionInfo.BuyPrice);\r\n    const sum = newlist.reduce((total, num) => {\r\n      if (num !== null && num < 3000) {\r\n        return total + num;\r\n      } else {\r\n        return total;\r\n      }\r\n    }, 0);\r\n    function countNonNullElements(arr) {\r\n      let count = 0;\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] !== null && arr[i] < 3000) {\r\n          count++;\r\n        }\r\n      }\r\n      return count;\r\n    }\r\n    const nonNullCount = countNonNullElements(newlist);\r\n    const avg = sum / nonNullCount;\r\n    return avg;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\nasync function jem() {\r\n  const avg = await loadjem();\r\n  const etc = [\r\n    {\r\n      Id: 1,\r\n      Category: \"기타\",\r\n      Name: \"골드\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/money/money_4.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 1,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 2,\r\n      Category: \"기타\",\r\n      Name: \"더보기 골드\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPrU44%2FbtszpBxVLgu%2Fz3mqnQKEdV41pHQIVxgXs1%2Fimg.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: -1,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 3,\r\n      Category: \"기타\",\r\n      Name: \"1레벨 보석\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_9_46.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: (avg / 3 / 3 / 3 / 3).toFixed(1),\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 4,\r\n      Category: \"기타\",\r\n      Name: \"2레벨 보석\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_9_47.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: (avg / 3 / 3 / 3).toFixed(1),\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 5,\r\n      Category: \"기타\",\r\n      Name: \"3레벨 보석\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_9_48.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: (avg / 3 / 3).toFixed(1),\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 6,\r\n      Category: \"기타\",\r\n      Name: \"4레벨 보석\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_9_49.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: (avg / 3).toFixed(1),\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 7,\r\n      Category: \"기타\",\r\n      Name: \"5레벨 보석\",\r\n      Grade: \"일반\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_9_50.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: avg.toFixed(1),\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 8,\r\n      Category: \"기타\",\r\n      Name: \"혼돈의 돌\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_6_89.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 9,\r\n      Category: \"기타\",\r\n      Name: \"마수의 뼈\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_3_101.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 10,\r\n      Category: \"기타\",\r\n      Name: \"욕망의 날개\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_3_124.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 11,\r\n      Category: \"기타\",\r\n      Name: \"광기의 나팔\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_10_19.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 12,\r\n      Category: \"기타\",\r\n      Name: \"몽환의 사념\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_10_80.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 13,\r\n      Category: \"기타\",\r\n      Name: \"쇠락의 눈동자\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_19.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 14,\r\n      Category: \"기타\",\r\n      Name: \"시련의 빛\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_10_164.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 15,\r\n      Category: \"기타\",\r\n      Name: \"관조의 빛무리\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_10_163.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 16,\r\n      Category: \"기타\",\r\n      Name: \"선명한 지혜의 엘릭서\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_147.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 17,\r\n      Category: \"기타\",\r\n      Name: \"빛나는 지혜의 엘릭서\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_146.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 18,\r\n      Category: \"기타\",\r\n      Name: \"선명한 지혜의 기운\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_3_111.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 19,\r\n      Category: \"기타\",\r\n      Name: \"빛나는 지혜의 기운\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_3_67.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 20,\r\n      Category: \"기타\",\r\n      Name: \"어둠의 불\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_239.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 21,\r\n      Category: \"기타\",\r\n      Name: \"마력의 샘물\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_237.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 22,\r\n      Category: \"기타\",\r\n      Name: \"담금질 : 알키오네의 눈\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_12_54.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 23,\r\n      Category: \"기타\",\r\n      Name: \"담금질 : 아그리스의 비늘\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_12_53.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 24,\r\n      Category: \"기타\",\r\n      Name: \"농축 돌파석\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_11_18.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 25,\r\n      Category: \"기타\",\r\n      Name: \"심화 돌파석\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_7_171.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      Id: 26,\r\n      Category: \"기타\",\r\n      Name: \"융합 돌파석\",\r\n      Icon: \"https://cdn-lostark.game.onstove.com/efui_iconatlas/use/use_7_173.png\",\r\n      BundleCount: 1,\r\n      TradeRemainCount: null,\r\n      YDayAvgPrice: 0,\r\n      RecentPrice: 1,\r\n      CurrentMinPrice: 1,\r\n      Grade: \"일반\",\r\n      __v: 0,\r\n    },\r\n  ];\r\n  return etc;\r\n}\r\nmodule.exports = jem;\r\n","// loadMarket.js\r\nconst mongoose = require(\"mongoose\");\r\nconst axios = require(\"axios\");\r\nconst trading_data = require(\"../model/trading_data\");\r\nconst marketList = require(\"../model/market\");\r\nmongoose\r\n  .connect(\r\n    `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@cluster0.ttcs9nu.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`,\r\n    { useNewUrlParser: true, useUnifiedTopology: true }\r\n  )\r\n  .then(() => {\r\n    console.log(\"MONGO CONNECTION OPEN!!!\");\r\n  })\r\n  .catch((err) => {\r\n    console.log(\"OH NO MONGO CONNECTION ERROR!!!!\");\r\n    console.log(err);\r\n  });\r\nconst authorizationToken = process.env.API_KEY;\r\n\r\nconst getPageData = async (Id) => {\r\n  const config = {\r\n    method: \"get\",\r\n    url: `https://developer-lostark.game.onstove.com/markets/items/${Id}`,\r\n    headers: {\r\n      accept: \"application/json\",\r\n      authorization: `bearer ${authorizationToken}`,\r\n      \"content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    let response = await axios(config);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst loadtrade = async () => {\r\n  try {\r\n    const IdList = await marketList.find(\r\n      { Id: { $gt: 1000 } },\r\n      { Id: 1, Category: 1, Name: 1 }\r\n    );\r\n\r\n    const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n    async function processDataWithDelay(IdList) {\r\n      let promises = [];\r\n      for (let i = 0; i < IdList.length; i++) {\r\n        promises.push(getPageData(IdList[i].Id));\r\n        if ((i + 1) % 90 === 0) {\r\n          await delay(65000); // 65초 대기\r\n          console.log(\"pause\");\r\n        }\r\n      }\r\n\r\n      const resultArrays = await Promise.all(promises);\r\n      const lists = resultArrays.flat();\r\n\r\n      lists.map(\r\n        (a) => (a.Category = IdList.find((b) => b.Name == a.Name).Category)\r\n      );\r\n      for (const list of lists) {\r\n        const filter = { Name: list.Name };\r\n        const existingDoc = await trading_data.findOne(filter);\r\n        if (existingDoc) {\r\n          const existingDocStats = existingDoc.Stats ? existingDoc.Stats : [];\r\n          const listStats = list.Stats ? list.Stats : [];\r\n          listStats.forEach((listStat) => {\r\n            const existingStatIndex = existingDocStats.findIndex(\r\n              (stat) => stat.Date === listStat.Date\r\n            );\r\n            if (existingStatIndex !== -1) {\r\n              existingDocStats[existingStatIndex] = listStat;\r\n            } else {\r\n              existingDocStats.push(listStat);\r\n            }\r\n          });\r\n          const updatedDocument = await trading_data.findOneAndUpdate(\r\n            filter,\r\n            {\r\n              $set: {\r\n                Stats: existingDocStats.sort(\r\n                  (a, b) => new Date(b.Date) - new Date(a.Date)\r\n                ),\r\n              },\r\n            },\r\n            { new: true }\r\n          );\r\n        } else {\r\n          const newDocument = await trading_data.create(list);\r\n        }\r\n      }\r\n      console.log(\"done\");\r\n    }\r\n    processDataWithDelay(IdList);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\n\r\nmodule.exports = loadtrade;\r\n","//update.js\r\nconst mongoose = require(\"mongoose\");\r\nconst marketList = require(\"../model/market\");\r\nconst getMakeList = require(\"./loadMarket\");\r\nconst jem = require(\"./loadjem\"); // 파일 경로에 맞게 수정\r\nconst loadtrade = require(\"./loadtrade\");\r\nmongoose\r\n  .connect(\r\n    `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@cluster0.ttcs9nu.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`,\r\n    { useNewUrlParser: true, useUnifiedTopology: true }\r\n  )\r\n  .then(() => {\r\n    console.log(\"MONGO CONNECTION OPEN!!!\");\r\n    fetchDataAndUpdate();\r\n  })\r\n  .catch((err) => {\r\n    console.log(\"OH NO MONGO CONNECTION ERROR!!!!\");\r\n    console.log(err);\r\n  });\r\n\r\nasync function fetchDataAndUpdate() {\r\n  try {\r\n    const importedList = await getMakeList();\r\n    const jemData = await jem(); // jem 함수 호출\r\n    const conbined = [...importedList, ...jemData];\r\n    await marketList.deleteMany({}); // 기존 데이터 모두 삭제\r\n    const insertedData2 = await marketList.insertMany(conbined);\r\n    console.log(`Inserted ${insertedData2.length} lists into MongoDB `);\r\n    console.log(\"tradedata loading waiting\");\r\n    function executeWithDelay(fn, delay) {\r\n      setTimeout(fn, delay);\r\n    }\r\n    executeWithDelay(() => loadtrade(), 65 * 1000);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nmodule.exports = fetchDataAndUpdate;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst captchaCodeSchema = new mongoose.Schema({\r\n  Num: String,\r\n  expiresTime: {\r\n    type: Date,\r\n    expires: \"5m\",\r\n    default: Date.now,\r\n  },\r\n});\r\n//만료 시간을 5분으로 설정했습니다.\r\nconst captchaCode = mongoose.model(\"captchaCode\", captchaCodeSchema);\r\ncaptchaCode.collection.createIndex(\r\n  { expiresTime: 1 },\r\n  { expireAfterSeconds: 0 }\r\n);\r\n//인덱스 설정을 통해 정해진 시간이 지나면 삭제되도록 합니다.\r\n\r\nmodule.exports = captchaCode;\r\n","const mongoose = require(\"mongoose\");\r\n\r\n//rooms id time message\r\n\r\nconst ChatLogSchema = new mongoose.Schema({\r\n  date: Date,\r\n  roomName: String,\r\n  id: String,\r\n  //소켓 아이디나 회원 아이디.\r\n  message: String,\r\n  expiresTime: {\r\n    type: Date,\r\n    expires: \"24h\", // 24시간 후에 문서가 만료되도록 설정\r\n    default: () => Date.now() + 24 * 60 * 60 * 1000, // 현재 시간에 24시간을 더한 시간을 기본값으로 설정\r\n  },\r\n});\r\n//변수명               모델 이름 스키마이름\r\nconst chatLog = mongoose.model(\"ChatLog\", ChatLogSchema);\r\n// chatLog.collection.createIndex({ expiresTime: 1 }, { expireAfterSeconds: 0 });\r\n\r\nmodule.exports = chatLog;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst HasItemSchema = new mongoose.Schema({\r\n  _id: {\r\n    type: [String],\r\n  },\r\n  grade: {\r\n    type: [String],\r\n  },\r\n  forwho: {\r\n    type: [String],\r\n  },\r\n  category: {\r\n    type: [String],\r\n  },\r\n  stat: {\r\n    type: Object,\r\n    default: {},\r\n  },\r\n  skill: {\r\n    type: Object,\r\n    default: {},\r\n  },\r\n  panalty: {\r\n    type: Object,\r\n    default: {},\r\n  },\r\n  location: {\r\n    type: [String],\r\n  },\r\n});\r\nconst HasItemListsSchema = new mongoose.Schema({\r\n  ID: String,\r\n  Item: [HasItemSchema],\r\n});\r\n\r\nconst HasItem = mongoose.model(\"HasItem\", HasItemListsSchema);\r\n\r\nmodule.exports = HasItem;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst ItemSchema = new mongoose.Schema(\r\n  {\r\n    Id: Number,\r\n    Category: String,\r\n    Name: String,\r\n    Grade: String,\r\n    Icon: String,\r\n    BundleCount: Number,\r\n    TradeRemainCount: Number,\r\n    YDayAvgPrice: Number,\r\n    RecentPrice: Number,\r\n    CurrentMinPrice: Number,\r\n    Quantity: Number,\r\n    Quantity2: Number,\r\n  },\r\n  { _id: false }\r\n); // _id 필드 사용 안 함\r\nconst ContentListsSchema = new mongoose.Schema({\r\n  _id: { type: String, required: false },\r\n  Title: String,\r\n  List: [ItemSchema],\r\n  Category: String,\r\n  ID: { type: String, required: false },\r\n});\r\n\r\nconst MarketItem = mongoose.model(\"MarketItem\", ContentListsSchema);\r\n\r\nmodule.exports = MarketItem;\r\n","//market.js\r\n\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst marketListSchema = new mongoose.Schema({\r\n  Id: Number,\r\n  Category: String,\r\n  Name: String,\r\n  Grade: String,\r\n  Icon: String,\r\n  BundleCount: Number,\r\n  TradeRemainCount: Number, // 또는 null 허용하려면 { type: Number, default: null }로 설정\r\n  YDayAvgPrice: Number,\r\n  RecentPrice: Number,\r\n  CurrentMinPrice: Number,\r\n});\r\n\r\nconst marketList = mongoose.model(\"Item\", marketListSchema);\r\n\r\nmodule.exports = marketList;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst ReportSchema = new mongoose.Schema({\r\n  Title: String,\r\n  Body: String,\r\n});\r\n\r\nconst Report = mongoose.model(\"Report\", ReportSchema);\r\n\r\nmodule.exports = Report;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst TextSchema = new mongoose.Schema({\r\n  TextTitle: { type: String, required: false, maxlength: 90 },\r\n  TextBody: { type: String, required: false, maxlength: 1500 },\r\n  Category: String,\r\n  Category2: String,\r\n  _id: String,\r\n  ID: { type: String, required: false, maxlength: 60 },\r\n  Date: Date,\r\n  FakeID: { type: String, required: false, maxlength: 60 },\r\n  FakePassWord: { type: String, required: false, maxlength: 60 },\r\n});\r\nconst Text = mongoose.model(\"Text\", TextSchema);\r\nmodule.exports = Text;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\n// '파괴석 조각' 컬렉션의 스키마 정의\r\nconst trading_dataSchema = new Schema({\r\n  Category: {\r\n    type: String,\r\n    // required: true,\r\n  },\r\n  Name: {\r\n    type: String,\r\n    // required: true,\r\n  },\r\n  TradeRemainCount: {\r\n    type: Number,\r\n    default: null, // TradeRemainCount가 주어지지 않은 경우 기본값으로 null 설정\r\n  },\r\n  BundleCount: {\r\n    type: Number,\r\n    // required: true,\r\n  },\r\n  Stats: {\r\n    type: [Object], // Stats는 객체의 배열로 구성된다고 가정합니다.\r\n  },\r\n});\r\n\r\n// '파괴석 조각' 컬렉션을 생성\r\nconst trading_data = mongoose.model(\"trading_data\", trading_dataSchema);\r\n\r\nmodule.exports = trading_data;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n  ID: {\r\n    type: String,\r\n    maxlength: 60,\r\n  },\r\n  Password: {\r\n    type: String,\r\n    maxlength: 60,\r\n  },\r\n  Question: {\r\n    type: String,\r\n    maxlength: 60,\r\n  },\r\n  Answer: {\r\n    type: String,\r\n    maxlength: 60,\r\n  },\r\n  Role: String,\r\n});\r\n\r\nconst User = mongoose.model(\"User\", UserSchema);\r\n\r\nmodule.exports = User;\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst visitedSchema = new mongoose.Schema({\r\n  Date: String,\r\n  todayTotal: Number,\r\n});\r\n\r\nconst Visited = mongoose.model(\"visited\", visitedSchema);\r\n\r\nmodule.exports = Visited;\r\n","module.exports = require(\"axios\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"nunjucks\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"socket.io\");","module.exports = require(\"winston\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","//server.js\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst app = express();\r\n\r\nconst { createServer } = require(\"http\");\r\nconst { Server } = require(\"socket.io\");\r\n\r\nvar port = normalizePort(process.env.PORT || \"3001\");\r\napp.set(\"port\", port);\r\n\r\nvar debug = require(\"debug\")(\"myapp:server\");\r\n// var http = require(\"http\");\r\n// var server = http.createServer(app);\r\nvar httpServer = createServer(app);\r\n\r\nhttpServer.on(\"error\", onError);\r\nhttpServer.on(\"listening\", onListening);\r\n\r\nconst mongoose = require(\"mongoose\");\r\nconst marketList = require(\"./src/model/market\");\r\nconst chatLog = require(\"./src/model/chatLog\");\r\n\r\nconst MarketItem = require(\"./src/model/item\");\r\nconst Text = require(\"./src/model/text\");\r\nconst User = require(\"./src/model/user\");\r\nconst Report = require(\"./src/model/report\");\r\nconst hasitem = require(\"./src/model/hasitem\");\r\nconst trading_data = require(\"./src/model/trading_data\");\r\nconst captchaCode = require(\"./src/model/captchaCode\");\r\nconst Visited = require(\"./src/model/visited\");\r\nrequire(\"dotenv\").config();\r\nconst passport = require(\"passport\");\r\nconst passportJWT = require(\"passport-jwt\");\r\nconst JwtStrategy = passportJWT.Strategy;\r\nconst ExtractJwt = passportJWT.ExtractJwt;\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst winston = require(\"winston\");\r\nvar cookieParser = require(\"cookie-parser\");\r\nvar logger = require(\"morgan\");\r\nconst nunjucks = require(\"nunjucks\");\r\nconst path = require(\"path\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst axios = require(\"axios\");\r\nconst fetchDataAndUpdate = require(\"./src/controllers/update\");\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\napp.use(express.json());\r\napp.use(passport.initialize());\r\napp.use(logger(\"dev\"));\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(\r\n  cors({\r\n    origin: [\r\n      \"http://localhost:3000\",\r\n      \"https://www.nextriceark.site\",\r\n      \"https://nextriceark-jnwk-git-main-nakkis-projects.vercel.app\",\r\n      \"https://nextriceark-jnwk-46nic2wxb-nakkis-projects.vercel.app\",\r\n      \"https://nextriceark-jnwk.vercel.app\",\r\n      \"https://developer-lostark.game.onstove.com\",\r\n    ],\r\n    credentials: true,\r\n  })\r\n);\r\n\r\nmongoose\r\n  .connect(\r\n    `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@cluster0.ttcs9nu.mongodb.net/${process.env.DB_NAME}?retryWrites=true&w=majority`\r\n  )\r\n  .then(() => {\r\n    console.log(\"MONGO CONNECTION OPEN!!!\");\r\n  })\r\n  .catch((err) => {\r\n    console.log(\"OH NO MONGO CONNECTION ERROR!!!!\");\r\n    console.log(err);\r\n  });\r\n\r\nfunction normalizePort(val) {\r\n  var port = parseInt(val, 10);\r\n\r\n  if (isNaN(port)) {\r\n    // named pipe\r\n    return val;\r\n  }\r\n\r\n  if (port >= 0) {\r\n    // port number\r\n    return port;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction onError(error) {\r\n  if (error.syscall !== \"listen\") {\r\n    throw error;\r\n  }\r\n\r\n  var bind = typeof port === \"string\" ? \"Pipe \" + port : \"Port \" + port;\r\n\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case \"EACCES\":\r\n      console.error(bind + \" requires elevated privileges\");\r\n      process.exit(1);\r\n      break;\r\n    case \"EADDRINUSE\":\r\n      console.error(bind + \" is already in use\");\r\n      process.exit(1);\r\n      break;\r\n    default:\r\n      throw error;\r\n  }\r\n}\r\n\r\nfunction onListening() {\r\n  var addr = httpServer.address();\r\n  var bind = typeof addr === \"string\" ? \"pipe \" + addr : \"port \" + addr.port;\r\n  debug(\"Listening on \" + bind);\r\n}\r\n\r\nconst jwtOptions = {\r\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n  secretOrKey: process.env.JWT_KEY,\r\n};\r\n\r\nconst strategy = new JwtStrategy(jwtOptions, async (jwt_payload, done) => {\r\n  try {\r\n    const existingUser = await User.findOne({ ID: jwt_payload.ID });\r\n\r\n    if (existingUser) {\r\n      return done(null, existingUser);\r\n    } else {\r\n      return done(null, false);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"serError updating data:\", error);\r\n    res.status(500).json({ error: \"serInternal server error\" });\r\n  }\r\n});\r\npassport.use(strategy);\r\n\r\n// 미들웨어: 쿠키 검증 및 사용자 인증\r\nconst authenticateToken = (req, res, next) => {\r\n  const token = req.cookies.token;\r\n\r\n  if (!token) {\r\n    return res.status(401).json({ message: \"Authentication failed\" });\r\n  }\r\n\r\n  jwt.verify(token, jwtOptions.secretOrKey, (err, user) => {\r\n    if (err) {\r\n      // 토큰 검증 실패 시\r\n      return res.status(403).json({ message: \"Invalid token\" });\r\n    }\r\n    req.user = user; // 검증된 사용자 정보를 요청 객체에 저장\r\n    next();\r\n  });\r\n};\r\n\r\nfunction checkAdminRole(req, res, next) {\r\n  const token = req.headers.authorization;\r\n  const realtoken = token.split(\" \")[1];\r\n  try {\r\n    if (!token) {\r\n      return res.status(401).json({ message: \"No token provided.\" });\r\n    }\r\n\r\n    jwt.verify(realtoken, process.env.JWT_KEY, (err, decoded) => {\r\n      if (err) {\r\n        // return console.log(res);;\r\n        //   return res.status(403).json({ message: 'serInvalid token.' });\r\n        // }\r\n        console.error(\"JWT verification error:\", err);\r\n        return res.status(403).json({ message: \"Invalid token.\" });\r\n      }\r\n\r\n      if (decoded.Role === \"admin\") {\r\n        // 사용자 역할이 'admin'인 경우에만 다음 미들웨어 또는 라우트로 이동\r\n        next();\r\n      } else {\r\n        return res\r\n          .status(403)\r\n          .json({ message: \"Access denied: Not an admin.\" });\r\n      }\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n}\r\n\r\napp.get(\"/api/touch\", async (req, res) => {\r\n  // 0부터 9999까지의 난수 생성\r\n  const randomNum = Math.floor(Math.random() * 10000);\r\n  const formattedNum = String(randomNum).padStart(4, \"0\");\r\n  const insertResult = await captchaCode.insertMany({ Num: formattedNum });\r\n  // 난수를 4자리 문자열로 변환\r\n  res.send(insertResult[0].Num);\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n  const currentTime = new Date().toLocaleTimeString();\r\n  res.send(`현재 시간: ${currentTime}`);\r\n  // res.send(\"hi\");\r\n});\r\napp.get(\"/api/ServerState\", (req, res) => {\r\n  res.send(`On`);\r\n  // res.send(\"hi\");\r\n});\r\n\r\nconst socketCorsOrigin = process.env.NODE_ENV\r\n  ? \"https://www.nextriceark.site\"\r\n  : `http://localhost:3000`;\r\nconst io = new Server(httpServer, {\r\n  cors: {\r\n    origin: socketCorsOrigin,\r\n    credentials: true,\r\n  },\r\n});\r\n\r\nconst connectedClients = {};\r\napp.get(\"/api/SocketID\", async (req, res) => {\r\n  // 0부터 9999까지의 난수 생성\r\n  const data = Object.keys(connectedClients);\r\n  res.send(data);\r\n});\r\napp.post(\"/api/RoomList\", async (req, res) => {\r\n  // 0부터 9999까지의 난수 생성\r\n  let roomList = [];\r\n  let { id } = req.body;\r\n\r\n  for (let key of io.sockets.adapter.rooms.keys()) {\r\n    roomList.push(key);\r\n  }\r\n  const data = roomList.filter((element) => {\r\n    return element.split(\"___\").includes(id) && element.split(\"___\").length > 1;\r\n  });\r\n  res.send(data);\r\n});\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`Client connected ${socket.id}`);\r\n  // socket.disconnect(true);\r\n  // console.log(io.sockets.adapter.rooms.keys());\r\n\r\n  connectedClients[socket.id] = socket;\r\n\r\n  // app.post(\"/api/SocketMakeRoom\", async (req, res) => {\r\n  //   // 0부터 9999까지의 난수 생성\r\n  //   const { data } = req.body;\r\n  //   let roomName = data;\r\n  //   // console.log(roomName);\r\n\r\n  //   // socket.join(roomName);\r\n  //   res.send(\"hi\");\r\n  // });\r\n\r\n  socket.on(\"join\", (roomName) => {\r\n    if (io.sockets.adapter.rooms.get(roomName) != undefined) {\r\n      !io.sockets.adapter.rooms.get(roomName).has(socket.id) &&\r\n        socket.join(roomName);\r\n    }\r\n  });\r\n\r\n  socket.on(\"chat\", (chatdata) => {\r\n    !io.sockets.adapter.rooms.has(chatdata.roomName) &&\r\n      socket.join(chatdata.roomName);\r\n    //최초 메세지 쏜사람이 조인 뚫어둠. 두번째 돌릴떄는 무시됨.\r\n    ////////\r\n    //확인된 오류 이미 조인된 상태에서 같은 생대를 클릭해서 대화 생성시 받는건되는데 주는건 안됨.- 오락가락함\r\n    //////\r\n    chatLog.insertMany(chatdata);\r\n    console.log(\r\n      `Message from ${chatdata.roomName} ${socket.id}: ${chatdata.message}`\r\n    );\r\n    let data = {\r\n      userId: socket.id === chatdata.id ? chatdata.id : null,\r\n      content: chatdata.message,\r\n      roomName: chatdata.roomName,\r\n      date: new Date(),\r\n    };\r\n    socket.emit(\"chat2\", data);\r\n    let idSet = new Set(chatdata.roomName.split(\"___\"));\r\n    // idSet.delete(socket.id) 나도 봐야되니까 없앨필요없을듯.\r\n    idSet.forEach((element) => {\r\n      socket.to(element).emit(\"chat2\", data);\r\n    });\r\n\r\n    // socket.to(chatdata.roomName).emit(\"chat2\", data);\r\n  });\r\n\r\n  socket.on(\"leaveRoom\", (currentRoomName) => {\r\n    // socket.leave(currentRoomName);\r\n\r\n    let data = {\r\n      userId: `system`,\r\n      content: `${socket.id}가 나갔습니다.`,\r\n      roomName: currentRoomName,\r\n    };\r\n    let idSet = new Set(\r\n      currentRoomName.split(\"___\").filter((e) => {\r\n        return socket.id != e;\r\n      })\r\n    );\r\n    idSet.forEach((element) => {\r\n      socket.to(element).emit(\"chat2\", data);\r\n    });\r\n\r\n    if (io.sockets.adapter.rooms.has(currentRoomName)) {\r\n      const clients = io.sockets.adapter.rooms.get(currentRoomName);\r\n      if (clients) {\r\n        clients.forEach((clientId) => {\r\n          io.sockets.sockets.get(clientId).leave(currentRoomName); // 클라이언트를 룸에서 제거\r\n        });\r\n      }\r\n    }\r\n\r\n    // 2. 룸 삭제\r\n    io.sockets.adapter.del(currentRoomName);\r\n  });\r\n\r\n  // 클라이언트가 연결을 종료했을 때 처리\r\n  socket.on(\"disconnect\", (roomName) => {\r\n    console.log(\"Client disconnected: \" + socket.id);\r\n\r\n    let roomList = Array.from(io.sockets.adapter.rooms).map((room) => {\r\n      return room[0]; // 각 room의 첫번째 요소가 room의 이름 (Socket ID)\r\n    });\r\n\r\n    for (let currentRoomName of roomList) {\r\n      let data = {\r\n        userId: `system`,\r\n        content: `${socket.id}가 나갔습니다. 잠시후 방이 사라집니다.`,\r\n        roomName: currentRoomName,\r\n      };\r\n      let idSet = new Set(\r\n        currentRoomName.split(\"___\").filter((e) => {\r\n          return socket.id != e;\r\n        })\r\n      );\r\n      idSet.forEach((element) => {\r\n        socket.to(element).emit(\"chat2\", data);\r\n      });\r\n      if (io.sockets.adapter.rooms.has(currentRoomName)) {\r\n        const clients = io.sockets.adapter.rooms.get(currentRoomName);\r\n        if (clients) {\r\n          clients.forEach((clientId) => {\r\n            io.sockets.sockets.get(clientId).leave(currentRoomName); // 클라이언트를 룸에서 제거\r\n          });\r\n        }\r\n      }\r\n\r\n      // 2. 룸 삭제\r\n      io.sockets.adapter.del(currentRoomName);\r\n    }\r\n\r\n    delete connectedClients[socket.id];\r\n  });\r\n});\r\n\r\napp.get(\"/api/VisitorCount\", async (req, res) => {\r\n  let totalVistor = 0;\r\n  const result = await Visited.aggregate([\r\n    {\r\n      $group: {\r\n        _id: null,\r\n        total: { $sum: \"$todayTotal\" },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  if (result.length > 0) {\r\n    totalVistor = result[0].total + 1;\r\n  } else {\r\n    console.log(\"데이터가 없습니다.\");\r\n  }\r\n\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // 월을 두 자리로 표시\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // 일을 두 자리로 표시\r\n\r\n  const formattedDate = `${year}-${month}-${day}`;\r\n  const todatVisitor = await Visited.find({ Date: formattedDate });\r\n\r\n  await Visited.updateOne({ Date: formattedDate }, { $inc: { todayTotal: 1 } });\r\n  const VisitorData = {\r\n    Total: totalVistor,\r\n    Today: todatVisitor[0].todayTotal,\r\n  };\r\n\r\n  res.json(VisitorData);\r\n});\r\n\r\napp.get(\"/api/captchaCode\", async (req, res) => {\r\n  try {\r\n    const randomNum = Math.floor(Math.random() * 10000);\r\n    const formattedNum = String(randomNum).padStart(4, \"0\");\r\n    const [insertedResult] = await captchaCode.insertMany({\r\n      Num: formattedNum,\r\n    });\r\n    res.send(insertedResult.Num);\r\n  } catch (error) {\r\n    console.error(\"Error generating captcha code:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n//임의의 수를 생성해서 DB에 저장하고 결과 값을 보냅니다.\r\n\r\napp.delete(\"/api/captchaCode\", async (req, res) => {\r\n  const data = req.query;\r\n\r\n  try {\r\n    await captchaCode.deleteMany({\r\n      Num: data.captchaCode,\r\n    });\r\n    res.status(201).json({ message: \"Data updated successfully\" });\r\n  } catch (error) {\r\n    console.error(\"Error generating captcha code:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n//임의의 수를 생성해서 DB에 저장하고 결과 값을 보냅니다.\r\n\r\napp.get(\"/api/data\", async (req, res) => {\r\n  const marketLists = await marketList.find({});\r\n  res.json(marketLists);\r\n});\r\n\r\napp.get(\"/api/load\", async (req, res) => {\r\n  const MarketItems = await MarketItem.find({});\r\n  res.json(MarketItems);\r\n});\r\napp.get(\"/api/trade\", async (req, res) => {\r\n  const MarketItems = await trading_data.find({});\r\n  res.json(MarketItems);\r\n});\r\n\r\napp.get(\"/api/loadreport\", async (req, res) => {\r\n  const Reports = await Report.find({});\r\n  res.json(Reports);\r\n});\r\n\r\napp.post(\"/api/Login\", async (req, res) => {\r\n  const { ID, Password } = req.body;\r\n  const user = await User.findOne({ ID: ID, Password: Password });\r\n\r\n  if (user) {\r\n    const payload = {\r\n      ID: user.ID,\r\n      Role: user.Role,\r\n      iat: Math.floor(Date.now() / 1000), // 토큰 발행 시간 (Unix 타임스탬프)\r\n      exp: Math.floor(Date.now() / 1000) + 60 * 60, // 1시간 후 만료\r\n    };\r\n    const token = jwt.sign(payload, jwtOptions.secretOrKey);\r\n    const expirationDate = new Date(); // 수정된 부분\r\n    expirationDate.setDate(expirationDate.getDate() + 1);\r\n    res.cookie(\"token\", token, {\r\n      expires: expirationDate,\r\n      sameSite: \"None\",\r\n      secure: true,\r\n      httpOnly: true,\r\n    });\r\n    res.json({ token });\r\n  } else {\r\n    res.status(401).json({ message: \"Authentication failed\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/check\", async (req, res) => {\r\n  const user = req.body; // 클라이언트에서 보낸 사용자 데이터\r\n  try {\r\n    const existingUser = await User.findOne({ ID: user.Item.ID });\r\n    if (!existingUser) {\r\n      res.json(false);\r\n    } else {\r\n      res.json(true);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/signup\", async (req, res) => {\r\n  const user = req.body; // 클라이언트에서 보낸 사용자 데이터\r\n\r\n  // if (captchaCode.findOne({Num:user.Pass})) {\r\n  const existingpass2 = await captchaCode.deleteMany({ Num: user.Pass });\r\n  if (existingpass2.deletedCount > 0) {\r\n    try {\r\n      const existingUser = await User.findOne({ ID: user.Item.ID });\r\n      if (!existingUser) {\r\n        // 동일한 아이디를 가진 사용자가 없는 경우\r\n        if (user.Item.ID === \"adminim\") {\r\n          user.Item.Role = \"admin\"; // 특별한 아이디에게 \"admin\" 권한을 부여\r\n        } else {\r\n          user.Item.Role = \"user\"; // 일반적인 사용자에게는 \"user\" 권한을 부여\r\n        }\r\n\r\n        const newUser = await User.insertMany(user.Item); // 새로운 데이터 추가\r\n        console.log(newUser);\r\n        res.status(201).json({ message: \"Data updated successfully\" });\r\n      } else {\r\n        // 이미 동일한 아이디를 가진 사용자가 있는 경우\r\n        res.status(409).json({ error: \"User with this ID already exists\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\napp.post(\"/api/forget\", async (req, res) => {\r\n  const user = req.body; // 클라이언트에서 보낸 사용자 데이터\r\n  try {\r\n    const existingUser = await User.findOne({ ID: user.Item.ID });\r\n    if (existingUser) {\r\n      // 동일한 아이디를 가진 사용자가 없는 경우\r\n      res.json(existingUser.Question);\r\n    } else {\r\n      // 이미 동일한 아이디를 가진 사용자가 있는 경우\r\n      res.status(409).json({ error: \"User with this ID already exists\" });\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\napp.post(\"/api/forget2\", async (req, res) => {\r\n  const user = req.body; // 클라이언트에서 보낸 사용자 데이터\r\n  try {\r\n    const existingUser = await User.findOne({\r\n      ID: user.Item.ID,\r\n      Question: user.Item.Question,\r\n      Answer: user.Item.Answer,\r\n    });\r\n    if (existingUser) {\r\n      // 동일한 아이디를 가진 사용자가 없는 경우\r\n      res.json(existingUser.Password);\r\n    } else {\r\n      // 이미 동일한 아이디를 가진 사용자가 있는 경우\r\n      res.status(409).json({ error: \"User with this ID already exists\" });\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n// passport.authenticate('jwt', { session: false })\r\napp.post(\"/api/delete1\", async (req, res) => {\r\n  const list = req.body; // 클라이언트에서 보낸 Title 데이터\r\n  const token = req.headers.authorization;\r\n  const realtoken = token.split(\" \")[1];\r\n  const decoded = jwt.verify(realtoken, process.env.JWT_KEY);\r\n  if (decoded.ID === list.Item.ID) {\r\n    try {\r\n      // MarketItem 컬렉션에서 해당하는 Title 값을 가진 문서 삭제\r\n      const result = await MarketItem.deleteOne({ _id: list.Item._id });\r\n\r\n      if (result.deletedCount === 1) {\r\n        console.log(\"Document deleted successfully\");\r\n        res.status(200).json(\"True\");\r\n      } else {\r\n        console.log(\"Document not found\");\r\n        res.status(404).json({ message: \"Document not found\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting document:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\n\r\napp.post(\"/api/report\", async (req, res) => {\r\n  const lists = req.body; // 클라이언트에서 보낸 lists 데이터\r\n  const existingpass = await captchaCode.find({ Num: lists.Pass });\r\n  if (existingpass.length > 0) {\r\n    await captchaCode.deleteMany({ Num: lists.Pass });\r\n    // if (captchaCode.findOne({ Num: lists.Pass })) {\r\n    // if (passNum.includes(String(lists.Pass))) {\r\n    try {\r\n      console.log(lists.Item);\r\n      // 데이터베이스 업데이트 처리\r\n      // 예시: 데이터 삭제 후 새로운 데이터 추가\r\n      await Report.insertMany(lists.Item); // 새로운 데이터 추가\r\n      //state db구조 손을 봐야할듯...일단은 그냥 고고\r\n      res.status(200).json({ message: \"Data updated successfully\" });\r\n      console.log(lists);\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\n// app.post('/api/resources', checkAdminRole, (req, res) => {\r\n//   // 'admin' 역할을 가진 사용자에게만 허용된 작업 수행\r\n//   // ...\r\n// });\r\n\r\napp.post(\"/api/reportdel\", checkAdminRole, async (req, res) => {\r\n  const lists = req.body; // 클라이언트에서 보낸 lists 데이터\r\n  console.log(lists);\r\n\r\n  // const query = { Title:lists.Title , Body: lists.Body };\r\n\r\n  try {\r\n    // 데이터베이스 업데이트 처리\r\n    // 예시: 데이터 삭제 후 새로운 데이터 추가\r\n    await Report.deleteOne({ Title: lists.Title, Body: lists.Body });\r\n\r\n    //state db구조 손을 봐야할듯...일단은 그냥 고고\r\n    res.status(200).json(\"True\");\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/update\", async (req, res) => {\r\n  const { lists } = req.body; // 클라이언트에서 보낸 lists 데이터\r\n\r\n  try {\r\n    // 데이터베이스 업데이트 처리\r\n    // 예시: 데이터 삭제 후 새로운 데이터 추가\r\n    await MarketItem.deleteMany(); // 모든 데이터 삭제\r\n    await MarketItem.insertMany(lists.lists.map((item) => item)); // 새로운 데이터 추가\r\n    //state db구조 손을 봐야할듯...일단은 그냥 고고\r\n    res.status(200).json({ message: \"Data updated successfully\" });\r\n    console.log(lists);\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/list\", async (req, res) => {\r\n  const list = req.body;\r\n  const existingCaptchaCode = await captchaCode.find({ Num: list.captchaCode });\r\n  if (existingCaptchaCode.length > 0) {\r\n    //일치하는 captchaCode코드 값이 없으면 이후 DB입력과정이 진행되지 않습니다.\r\n\r\n    await captchaCode.deleteMany({ Num: list.captchaCode });\r\n    try {\r\n      const insertResult = await MarketItem.insertMany(list.Item);\r\n      console.log(insertResult);\r\n      res.json({ message: \"Data updated successfully\" });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\n\r\napp.get(\r\n  \"/api/Board/check\",\r\n  async (req, res) => {\r\n    const data = req.query;\r\n    const query = {\r\n      _id: data._id,\r\n    };\r\n    if (data.ID === \"adminim\") {\r\n    } else {\r\n      query.FakePassWord = data.InputFakePassWord;\r\n    }\r\n    const existingText = await Text.find(query);\r\n    if (existingText.length > 0) {\r\n      res.json(true);\r\n    } else {\r\n      res.json(false);\r\n    }\r\n  }\r\n  // await Text.deleteMany(query);\r\n  // try {\r\n  //   res.json({ message: \"Data deleted successfully\" });\r\n  // } catch (error) {\r\n  //   console.error(\"Error updating data:\", error);\r\n  //   res.status(500).json({ error: \"Internal server error\" });\r\n  // }\r\n);\r\n\r\napp.get(\"/api/Board\", async (req, res) => {\r\n  try {\r\n    const TextList = await Text.find({}, { FakePassWord: 0 });\r\n    res.json(TextList);\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/Board\", async (req, res) => {\r\n  const existingCaptchaCode = await captchaCode.find({\r\n    Num: req.body.CaptchaCode,\r\n  });\r\n  if (existingCaptchaCode.length > 0) {\r\n    //일치하는 captchaCode코드 값이 없으면 이후 DB입력과정이 진행되지 않습니다.\r\n\r\n    await captchaCode.deleteMany({ Num: req.body.CaptchaCode });\r\n    try {\r\n      const insertResult = await Text.insertMany(req.body.Text);\r\n      res.json({ message: \"Data updated successfully\" });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\n\r\napp.delete(\"/api/Board\", async (req, res) => {\r\n  const data = req.query;\r\n  const query = {\r\n    _id: data._id,\r\n  };\r\n  if (data.InputFakePassWord !== \"undefined\") {\r\n    query.FakePassWord = data.InputFakePassWord;\r\n  } else {\r\n    if (data.ID === \"adminim\") {\r\n    } else {\r\n      query.ID = data.ID;\r\n    }\r\n  }\r\n  try {\r\n    const existingText = await Text.deleteMany(query);\r\n    if (existingText.length > 0) {\r\n      res.json({ message: \"Data deleted successfully\" });\r\n    } else {\r\n      res.json(false);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.patch(\"/api/Board\", async (req, res) => {\r\n  const data = req.body;\r\n  const { _id, TextTitle, TextBody, Category, Category2, ID } = data;\r\n  try {\r\n    await Text.findByIdAndUpdate(_id, {\r\n      $set: { TextTitle, TextBody, Category },\r\n    });\r\n    res.json({ message: \"Data updated successfully\" });\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n\r\napp.post(\"/api/update3\", async (req, res) => {\r\n  const list = req.body; // 클라이언트에서 보낸 lists 데이터\r\n  console.log(list);\r\n  try {\r\n    const deleteedResult = await hasitem.deleteMany({ ID: list.ID });\r\n    const insertResult = await hasitem.insertMany(list);\r\n    console.log(insertResult);\r\n    res.status(200).json({ message: \"Data updated successfully\" });\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\napp.post(\"/api/hasitemload\", async (req, res) => {\r\n  const list = req.body; // 클라이언트에서 보낸 lists 데이터\r\n  console.log(list);\r\n  try {\r\n    const insertResult = await hasitem.find({ ID: list.ID });\r\n    console.log(insertResult);\r\n    // res.send(insertResult);\r\n    res.json(insertResult);\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n});\r\n// const token = req.headers.authorization;\r\n// const realtoken = token.split(\" \")[1];\r\n// const decoded = jwt.verify(realtoken, process.env.JWT_KEY);\r\n// const token2 = jwt.sign(decoded, process.env.JWT_KEY);\r\n// 아이디 검증 과정\r\napp.post(\"/api/update2\", async (req, res) => {\r\n  const list = req.body; // 클라이언트에서 보낸 lists 데이터\r\n  const token = req.headers.authorization;\r\n  const realtoken = token.split(\" \")[1];\r\n  const decoded = jwt.verify(realtoken, process.env.JWT_KEY);\r\n  // if (passNum.includes(String(list.Pass))) {\r\n  if (decoded.ID === list.Item.ID) {\r\n    try {\r\n      const insertResult = await MarketItem.updateOne(\r\n        { _id: list.Item._id },\r\n        {\r\n          $set: {\r\n            Title: list.Item.Title,\r\n            List: list.Item.List,\r\n            Category: list.Item.Category,\r\n          },\r\n        }\r\n      );\r\n      console.log(insertResult);\r\n      //state db구조 손을 봐야할듯...일단은 그냥 고고\r\n      res.status(200).json({ message: \"Data updated successfully\" });\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      res.status(500).json({ error: \"Internal server error\" });\r\n    }\r\n  }\r\n});\r\n\r\napp.get(\"/api/dbdel\", async (req, res) => {\r\n  try {\r\n    // 'Body' 속성에 \"흐음\"을 포함하는 모든 문서 삭제\r\n    // const result = await Report.deleteMany({ Body: /으음/ });\r\n    // const result = await Report.deleteMany({ Body: /으음/ });\r\n    const result = await MarketItem.deleteMany({ Title: { $not: /더보기/ } });\r\n\r\n    res.json({ message: `${result.deletedCount} documents deleted` });\r\n  } catch (error) {\r\n    res.status(500).json({ error: \"An error occurred\" });\r\n  }\r\n});\r\n\r\nasync function myFunction() {\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // 월을 두 자리로 표시\r\n  const day = String(currentDate.getDate()).padStart(2, \"0\"); // 일을 두 자리로 표시\r\n  const formattedDate = `${year}-${month}-${day}`;\r\n\r\n  // console.log(currentDate);\r\n  // 실행하려는 작업을 이 함수 안에 구현합니다.\r\n  const existingVisited = await Visited.findOne({ Date: formattedDate });\r\n  if (!existingVisited) {\r\n    await Visited.insertMany({ Date: formattedDate, todayTotal: 0 });\r\n    fetchDataAndUpdate();\r\n  }\r\n}\r\nmyFunction();\r\n// 함수를 매일 오전 00시에 실행하기 위한 시간 계산\r\nconst now = new Date();\r\nconst tomorrow = new Date(now);\r\ntomorrow.setDate(now.getDate() + 1);\r\ntomorrow.setHours(1, 0, 0, 0);\r\n\r\n// 다음 실행 시각까지 대기하기 위한 시간 계산\r\nconst delay = tomorrow - now;\r\n\r\n// 함수를 주기적으로 실행하기 위한 Interval 설정\r\nconst interval = 24 * 60 * 60 * 1000; // 24시간\r\n\r\n// 처음 실행\r\nsetTimeout(myFunction, delay);\r\n\r\n// 매일 오전 00시마다 함수를 실행하는 Interval 설정\r\nsetInterval(function () {\r\n  myFunction();\r\n}, interval);\r\n\r\nhttpServer.listen(port, () => {\r\n  console.log(`server running at http://localhost:${port}`);\r\n});\r\n"],"names":["axios","require","authorizationToken","process","env","API_KEY","searchdata","Category","CategoryCode","PageNum","newarray","getMakeList","e","getPageData","pageNo","config","method","url","headers","accept","authorization","data","PageNo","response","itemsToExclude","filteredItems","Items","filter","item","includes","Name","error","console","log","Grade","BundleCount","fetchData","promises","push","resultArrays","Promise","all","list","flat","newlist","map","i","condition","resultList","result","YDayAvgPrice","avg","avghonor","Id","Icon","TradeRemainCount","RecentPrice","CurrentMinPrice","module","exports","ItemLevelMin","ItemLevelMax","ItemGradeQuality","SkillOptions","FirstOption","SecondOption","MinValue","MaxValue","EtcOptions","Sort","CharacterClass","ItemTier","ItemGrade","ItemName","SortCondition","loadjem","AuctionInfo","BuyPrice","sum","reduce","total","num","countNonNullElements","arr","count","length","nonNullCount","jem","etc","__v","toFixed","mongoose","trading_data","marketList","connect","DB_USER","DB_PASSWORD","DB_NAME","useNewUrlParser","useUnifiedTopology","then","catch","err","loadtrade","IdList","find","$gt","delay","ms","resolve","setTimeout","processDataWithDelay","lists","a","b","existingDoc","findOne","existingDocStats","Stats","listStats","forEach","listStat","existingStatIndex","findIndex","stat","Date","updatedDocument","findOneAndUpdate","$set","sort","new","newDocument","create","fetchDataAndUpdate","importedList","jemData","conbined","deleteMany","insertedData2","insertMany","executeWithDelay","fn","captchaCodeSchema","Schema","Num","String","expiresTime","type","expires","default","now","captchaCode","model","collection","createIndex","expireAfterSeconds","ChatLogSchema","date","roomName","id","message","chatLog","HasItemSchema","_id","grade","forwho","category","Object","skill","panalty","location","HasItemListsSchema","ID","Item","HasItem","ItemSchema","Number","Quantity","Quantity2","ContentListsSchema","required","Title","List","MarketItem","marketListSchema","ReportSchema","Body","Report","TextSchema","TextTitle","maxlength","TextBody","Category2","FakeID","FakePassWord","Text","trading_dataSchema","UserSchema","Password","Question","Answer","Role","User","visitedSchema","todayTotal","Visited","express","cors","app","createServer","Server","port","normalizePort","PORT","set","debug","httpServer","on","onError","onListening","hasitem","passport","passportJWT","JwtStrategy","Strategy","ExtractJwt","jwt","winston","cookieParser","logger","nunjucks","path","bodyParser","use","urlencoded","extended","json","initialize","origin","credentials","val","parseInt","isNaN","syscall","bind","code","exit","addr","address","jwtOptions","jwtFromRequest","fromAuthHeaderAsBearerToken","secretOrKey","JWT_KEY","strategy","jwt_payload","done","existingUser","res","status","authenticateToken","req","next","token","cookies","verify","user","checkAdminRole","realtoken","split","decoded","get","randomNum","Math","floor","random","formattedNum","padStart","insertResult","send","currentTime","toLocaleTimeString","socketCorsOrigin","NODE_ENV","io","connectedClients","keys","post","roomList","body","key","sockets","adapter","rooms","element","socket","undefined","has","join","chatdata","userId","content","emit","idSet","Set","to","currentRoomName","clients","clientId","leave","del","Array","from","room","totalVistor","aggregate","$group","$sum","currentDate","year","getFullYear","month","getMonth","day","getDate","formattedDate","todatVisitor","updateOne","$inc","VisitorData","Total","Today","insertedResult","delete","query","marketLists","MarketItems","Reports","payload","iat","exp","sign","expirationDate","setDate","cookie","sameSite","secure","httpOnly","existingpass2","Pass","deletedCount","newUser","deleteOne","existingpass","existingCaptchaCode","InputFakePassWord","existingText","TextList","CaptchaCode","patch","findByIdAndUpdate","deleteedResult","$not","myFunction","existingVisited","tomorrow","setHours","interval","setInterval","listen"],"sourceRoot":""}